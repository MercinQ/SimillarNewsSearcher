// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SNS.API.Data;

#nullable disable

namespace SNS.API.Migrations
{
    [DbContext(typeof(SnsDbContext))]
    partial class SnsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SNS.API.Data.Entitites.FiltredWord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FiltredWords");
                });

            modelBuilder.Entity("SNS.API.Data.Entitites.MatchedNews", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("MatchingPercent")
                        .HasColumnType("int");

                    b.Property<int>("NewsOneId")
                        .HasColumnType("int");

                    b.Property<int>("NewsTwoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RowAddedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NewsOneId");

                    b.HasIndex("NewsTwoId");

                    b.ToTable("MatchedNews");
                });

            modelBuilder.Entity("SNS.API.Data.Entitites.MatchedWord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("MatchedNewsId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MatchedNewsId");

                    b.ToTable("MatchedWords");
                });

            modelBuilder.Entity("SNS.API.Data.Entitites.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NewsWebsiteId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NewsWebsiteId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("SNS.API.Data.Entitites.NewsWebsite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Url")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NewsWebsites");
                });

            modelBuilder.Entity("SNS.API.Data.Entitites.MatchedNews", b =>
                {
                    b.HasOne("SNS.API.Data.Entitites.News", "NewsOne")
                        .WithMany()
                        .HasForeignKey("NewsOneId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SNS.API.Data.Entitites.News", "NewsTwo")
                        .WithMany()
                        .HasForeignKey("NewsTwoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NewsOne");

                    b.Navigation("NewsTwo");
                });

            modelBuilder.Entity("SNS.API.Data.Entitites.MatchedWord", b =>
                {
                    b.HasOne("SNS.API.Data.Entitites.MatchedNews", "MatchedNews")
                        .WithMany()
                        .HasForeignKey("MatchedNewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MatchedNews");
                });

            modelBuilder.Entity("SNS.API.Data.Entitites.News", b =>
                {
                    b.HasOne("SNS.API.Data.Entitites.NewsWebsite", "NewsWebsite")
                        .WithMany()
                        .HasForeignKey("NewsWebsiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NewsWebsite");
                });
#pragma warning restore 612, 618
        }
    }
}
